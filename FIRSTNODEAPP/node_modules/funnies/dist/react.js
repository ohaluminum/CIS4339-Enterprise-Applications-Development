'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');

var _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FunniesComponent = function (_React$Component) {
  _inherits(FunniesComponent, _React$Component);

  function FunniesComponent(props) {
    _classCallCheck(this, FunniesComponent);

    var _this = _possibleConstructorReturn(this, (FunniesComponent.__proto__ || Object.getPrototypeOf(FunniesComponent)).call(this));

    _this.state = {};
    _this.state.funnies = new _index2.default(props.customMessages, props.options);
    _this.state.message = _this.state.funnies.message();

    // periodically, update the message to be something else
    _this.changeMessage(props);
    return _this;
  }

  _createClass(FunniesComponent, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.state.interval);
    }
  }, {
    key: 'changeMessage',
    value: function changeMessage() {
      var _this2 = this;

      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

      if (props.interval > 0) {
        this.state.interval = setTimeout(function () {
          _this2.setState({ message: _this2.state.funnies.message() });
          _this2.state.interval = setTimeout(_this2.changeMessage.bind(_this2), props.interval);
        }, props.interval);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'funnies' },
        _react2.default.createElement(
          _CSSTransitionGroup2.default,
          {
            transitionName: 'funnies',
            transitionEnterTimeout: 200,
            transitionLeaveTimeout: 200
          },
          _react2.default.createElement(
            'span',
            {
              className: 'funnies-text',
              key: this.state.message
            },
            this.state.message
          )
        )
      );
    }
  }]);

  return FunniesComponent;
}(_react2.default.Component);

exports.default = FunniesComponent;

FunniesComponent.defaultProps = { interval: 8000, customMessages: [], options: {} };

// for browser support
if (typeof window !== 'undefined') {
  window.FunniesComponent = FunniesComponent;
}